@use "sass:map";
@use "@picocss/pico/scss/settings" as *;

article {
  &.color-picker {
    > header {
      grid-gap: var(#{$css-var-prefix}block-spacing-horizontal);
      display: grid;
      grid-template-columns: repeat(5, 1fr);
      overflow: hidden;
      border-top-right-radius: var(#{$css-var-prefix}border-radius);
      border-top-left-radius: var(#{$css-var-prefix}border-radius);

      a {
        display: flex;
        align-items: center;
        justify-content: center;
        aspect-ratio: 1/1;
        border-radius: 50%;

        &[aria-busy="true"] {
          &::before {
            max-width: 1.5rem;
            filter: brightness(0) invert(1);
            opacity: 0.875;
          }

          &.pico-background-lime,
          &.pico-background-yellow,
          &.pico-background-amber,
          &.pico-background-pumpkin,
          &.pico-background-sand,
          &.pico-background-grey {
            &::before {
              filter: brightness(0);
            }
          }
        }

        svg {
          width: 50%;
          max-width: 1.5rem;
          height: auto;
          opacity: 0.875;
        }
      }

      @media (min-width: map.get(map.get($breakpoints, "md"), "breakpoint")) {
        grid-gap: calc(var(#{$css-var-prefix}block-spacing-horizontal) * 0.5);
        grid-template-columns: repeat(10, 1fr);
      }

      @media (min-width: map.get(map.get($breakpoints, "xl"), "breakpoint")) {
        grid-gap: 0;
        grid-template-columns: repeat(20, 1fr);
        padding: 0;

        a {
          border-radius: 0;
        }
      }
    }

    h2 {
      color: var(#{$css-var-prefix}primary);
      font-size: 1.5rem;
      line-height: 1.175;
    }

    > hgroup,
    > form,
    > footer {
      transition:
        opacity var(#{$css-var-prefix}transition),
        filter var(#{$css-var-prefix}transition);
    }
  }
}
