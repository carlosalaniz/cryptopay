@use "sass:map";
@use "@picocss/pico/scss/settings" as *;

body > main.homepage > .comparison {
  > hgroup {
    max-width: map.get(map.get($breakpoints, "md"), "viewport");
    margin-bottom: calc(var(#{$css-var-prefix}homepage-spacing-vertical) * 0.75);
    margin-inline: auto;

    @media (min-width: map.get(map.get($breakpoints, "sm"), "breakpoint")) {
      text-align: center;
    }

    @media (min-width: map.get(map.get($breakpoints, "md"), "breakpoint")) {
      margin-bottom: calc(var(#{$css-var-prefix}homepage-spacing-vertical) / 3);
    }

    > h2 {
      margin-bottom: calc(var(#{$css-var-prefix}spacing) * 1);

      @media (min-width: map.get(map.get($breakpoints, "md"), "breakpoint")) {
        margin-bottom: calc(var(#{$css-var-prefix}spacing) / 2);
      }
    }

    > *:not(:first-child):last-child {
      #{$css-var-prefix}color: var(#{$css-var-prefix}color);
      text-wrap: pretty;
    }
  }

  > .grid {
    column-gap: calc(var(#{$css-var-prefix}homepage-spacing-horizontal) / 2);
    row-gap: calc(var(#{$css-var-prefix}homepage-spacing-vertical) / 2);

    @media (min-width: map.get(map.get($breakpoints, "md"), "breakpoint")) {
      grid-template-columns: 1fr;
    }

    @media (min-width: map.get(map.get($breakpoints, "lg"), "breakpoint")) {
      grid-template-columns: repeat(auto-fit, minmax(0%, 1fr));
    }

    > div {
      display: flex;
      flex-direction: column;

      p {
        .emoji {
          font-size: 1.25rem;
        }
      }

      .code {
        height: 100%;
        margin-bottom: 0;
        border: var(#{$css-var-prefix}card-component-outline-width) solid
          var(#{$css-var-prefix}card-component-outline-color);
        background-color: var(#{$css-var-prefix}card-background-color);

        &::before {
          display: block;
          position: absolute;
          width: 0.25rem;
          height: 100%;
          inset: 0 auto 0 0;
          content: "";
        }

        pre {
          height: 100%;
        }

        @media (min-width: map.get(map.get($breakpoints, "lg"), "breakpoint")) {
          #{$css-var-prefix}comparison-gradient-direction: to right;
          &::before {
            width: 100%;
            height: 0.25rem;
            inset: 0 0 auto 0;
          }
        }
      }

      &.pico {
        .code {
          &::before {
            background: var(#{$css-var-prefix}comparison-gradient-valid);
          }
        }
      }

      &.utility-framework {
        .code {
          &::before {
            background: var(#{$css-var-prefix}comparison-gradient-invalid);
          }
        }
      }
    }
  }
}
