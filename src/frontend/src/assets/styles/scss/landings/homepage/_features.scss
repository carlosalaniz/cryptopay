@use "sass:map";
@use "@picocss/pico/scss/settings" as *;

body > main.homepage > .features {
  > hgroup {
    max-width: map.get(map.get($breakpoints, "lg"), "viewport");
    margin-bottom: calc(var(#{$css-var-prefix}homepage-spacing-vertical) * 0.75);
    margin-inline: auto;

    @media (min-width: map.get(map.get($breakpoints, "sm"), "breakpoint")) {
      text-align: center;
    }

    > h2 {
      margin-bottom: calc(var(#{$css-var-prefix}spacing) * 1);
    }

    > *:not(:first-child):last-child {
      #{$css-var-prefix}color: var(#{$css-var-prefix}color);
      text-wrap: pretty;
    }
  }

  > .grid {
    column-gap: calc(var(#{$css-var-prefix}homepage-spacing-horizontal) / 2);
    row-gap: calc(var(#{$css-var-prefix}homepage-spacing-vertical) / 2);

    @media (min-width: map.get(map.get($breakpoints, "md"), "breakpoint")) {
      grid-template-columns: 1fr;
    }

    @media (min-width: map.get(map.get($breakpoints, "lg"), "breakpoint")) {
      grid-template-columns: 1fr 1fr;
    }

    article {
      margin-bottom: 0;
      margin-block: 0;
      border: var(#{$css-var-prefix}card-component-outline-width) solid
        var(#{$css-var-prefix}card-component-outline-color);

      > svg {
        width: auto;
        height: 1.125rem;
        margin-bottom: calc(var(#{$css-var-prefix}spacing) * 0.75);
        color: var(#{$css-var-prefix}features-icon-color);

        &.pico-icon {
          path {
            fill: currentColor;
          }
        }
      }

      h3 {
        font-size: 1.25rem;
        line-height: 1.2;
      }

      p {
        margin-bottom: calc(var(#{$css-var-prefix}spacing) * 1);
        color: var(#{$css-var-prefix}muted-color);
        text-wrap: pretty;

        &:last-child {
          margin-bottom: 0;

          a {
            svg {
              width: auto;
              height: 1rem;
              margin-left: calc(var(#{$css-var-prefix}spacing) * 0.25);
            }
          }
        }
      }
    }
  }
}
